# -*- coding: UTF-8 -*-
import numpy as np

# Выведите на печать версию модуля numpy, используемую в текущий момент в песочнице Stepik.
print(np.__version__)

# Считайте число n
# Создайте в переменной Z Numpy вектор из нулей длины n.
Z = np.zeros(int(input()))

# Посчитайте размер матрицы Z в байтах и выведите его на печать.
print(Z.size*Z.itemsize)

# Выведите на печать встроенную документацию для функции add numpy, а потом объекта numpy.array.
print(np.add.__doc__)
print(np.array.__doc__)

# Считайте 2 числа:
# n - размер Numpy вектора
# x - координата элемента вектора, который должен быть равен 1. Остальные элементы вектора должны быть равны 0.
# Сохраните вектор в переменную Z.
n = int(input())
x = int(input())

Z = np.zeros(n)
Z[x] = 1

# Считайте 2 числа n, m.
# Создайте вектор Z состоящий из чисел от n до m.
n, m = int(input()), int(input())
Z = np.arange(n, m+1)

# Дан вектор Z. "Разверните" его
Z = np.array([1, 2, 3, 4])
Z = Z[::-1]

# Считайте 3 числа:
# n - количество элементов матрицы
# m и l - размеры матрицы (число строк и столбцов соответственно)
# Заполните матрицу Z числами от 0 до n-1 по порядку (сперва строки, потом столбцы).
# Гарантируется, что m*l = n, т.е. все элементы "влезут" в матрицу и не останется пустых мест.
n = int(input())
m, l = list(map(int,input().split()))
Z = np.arange(n).reshape(m, l)

# Дан вектор Z
# Запишите в переменную NonZerros индексы ненулевых элементов.
NonZerros = np.nonzero(np.array(Z))

# Дана матрица чисел Z (Z может быть 1, 2 или даже 3 мерной).
# Выведите на печать список чисел из этой матрицы, которые больше 3.
Z = np.array([[[1, 2],
           [4, 5]],
          [[7, 8],
           [0, 0]]])
print(list(Z[np.nonzero(Z > 3)]))

# Считайте число n
# Создайте единичную матрицу размера n, сохраните результат в переменную Z.
Z = np.eye(int(input()))

# Считайте 3 числа: n, m, l.
# Зафиксируйте значение генератора случайных чисел Numpy с помощью
# numpy.random.seed(42)
# Создайте матрицу n*m*l из случайных чисел (от 0 до 1) и сохраните результат в переменную Z.
n, m, l = list(map(int, input().split()))
np.random.seed(42)
Z = np.random.random([n, m, l])

# Считайте 2 числа: n, m.
# Зафиксируйте значение генератора случайных чисел Numpy с помощью
# numpy.random.seed(42)
# Создайте матрицу n*m из случайных чисел (от 0 до 1).
# Выведите на печать значение минимального и максимального чисел в получившейся матрице (каждое с новой строки).
np.random.seed(42)
n, m = list(map(int, input().split()))
Z = np.random.random([n, m])
print(Z.min())
print(Z.max())


# Создайте матрицу n*m из случайных чисел (от 0 до 1).
# Выведите на печать значение среднего для всей матрицы.
n, m = list(map(int, input().split()))
np.random.seed(42)
Z = np.random.random([n, m])
print(np.mean(Z))

# Создайте матрицу n*m из случайных чисел (от 0 до 1).
# Найдите среднее значение для каждого из столбцов.
# Выведите на печать значение минимального и максимального среднего по столбцам (каждое с новой строки).
n, m = list(map(int, input().split()))
np.random.seed(42)
Z = np.random.random([n, m])
res = np.mean(Z, axis=0)
print(min(res))
print(max(res))
